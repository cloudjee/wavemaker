<?xml version="1.0" encoding="UTF-8"?>

<!-- This is a Studio Managed File. If you customize this file by hand, use 
	of Studio Security tooling may revert your customizations -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="WMSecAuthEntryPoint">
		<security:custom-filter position="FORM_LOGIN_FILTER"
			ref="WMSecAuthFilter" />
		<security:intercept-url pattern="/app.css"
			access="permitAll" />
		<security:intercept-url pattern="/config.js"
			access="permitAll" />
		<security:intercept-url pattern="/types.js"
			access="permitAll" />
		<security:intercept-url pattern="/login.html"
			access="permitAll" />
		<security:intercept-url pattern="/pages/login/**"
			access="permitAll" />
		<security:intercept-url pattern="/securityservice.json"
			access="permitAll" />
		<security:intercept-url pattern="/j_spring_security_check"
			access="permitAll" />
		<security:intercept-url pattern="/*.upload"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/*.download"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/index.html"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/pages/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/*.json"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/*/*.json"
			access="isAuthenticated()" />
		<!-- <security:logout /> -->
	</security:http>

	<bean id="WMSecAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="authenticationSuccessHandler" ref="successHandler" />
		<property name="authenticationManager" ref="authenticationManagerDemo" />
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
	</bean>
	
	<bean id="WMSecAuthEntryPoint"
		class="com.wavemaker.runtime.security.WMAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.html" />
	</bean>

	<bean id="successHandler"
		class="com.wavemaker.runtime.security.WMAuthenticationSuccessHandler">
		<property name="redirectStrategy" ref="hashAwareRedirectStrategy"/>
	</bean>
	
	<bean id="hashAwareRedirectStrategy" class="com.wavemaker.runtime.security.WMHashAwareRedirectStrategy"/>
	
	 <!-- This authentication-manager exists to populate the default authentication-manager id. It is not used  -->
    <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="dummy" password="dummy" authorities="ROLE_dummy" />
			</security:user-service>	
		</security:authentication-provider>	
	</security:authentication-manager>

	<security:authentication-manager id="authenticationManagerDemo" alias="authenticationManagerDemo">
		<security:authentication-provider>
			<security:user-service>
				<security:user name="admin" password="admin"
					authorities="ROLE_admin" />
				<security:user name="user" password="user"
					authorities="ROLE_user" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:authentication-manager id="authenticationManagerDB" alias="authenticationManagerDB">
		<security:authentication-provider
			user-service-ref="jdbcDaoImpl">
			<!--security:password-encoder hash="md5" /-->
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="jdbcDaoImpl"
        class="com.wavemaker.runtime.security.EnhancedJdbcDaoImpl">
        <property name="dataSource">
			<ref bean="dummyDataSource"/>
		</property>
		 <property name="rolePrefix">
            <value>ROLE_</value>
        </property>
        <property name="usersByUsernameQuery">
            <value>SELECT first_name, last_name, 1 FROM employee WHERE first_name = ?</value>
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>select u.userid, ur.role from user u, user_roles ur where u.id = ur.userid and u.userid = ?</value>
        </property>
		<property name="usernameBasedPrimaryKey">
            <value>true</value>
        </property>
    </bean>

	<bean id="dummyDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		lazy-init="true" />

	<!-- Setup Security Service -->
    <bean id="securityService"
        class="com.wavemaker.runtime.security.SecurityService"
        scope="singleton">
        <property name="rolePrefix">
            <value>ROLE_</value>
        </property>
        <property name="noRolesMarkerRole">
            <value>DEFAULT_NO_ROLES</value>
        </property>
        <!-- All the roles used in the system should be listed here. -->
        <property name="roles">
            <list>
            </list>
        </property>
    </bean>

	<bean class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider"
		id="adAuthProvider">
		<constructor-arg value="wavemaker.com" />
		<constructor-arg value="ldap://adserver.wavemaker.com/" />
		<property name="convertSubErrorCodesToExceptions" value="true"/>
	</bean>

    <security:authentication-manager id="authenticationManagerAD" alias="authenticationManagerAD">
        <security:authentication-provider ref="adAuthProvider"/>
    </security:authentication-manager>

	<security:ldap-server url="ldap://localhost:389/dc=wavemaker,dc=vmware,dc=com"/>
	 
    <security:authentication-manager id="authenticationManagerLDAP" alias="authenticationManagerLDAP">
        <security:ldap-authentication-provider user-search-filter="(cn={0})" role-prefix="ROLE_"/>
    </security:authentication-manager>

    <security:authentication-manager id="authenticationManagerLDAPwithDB" alias="authenticationManagerLDAPwithDB">
        <security:authentication-provider ref="ldapAuthProvider"/>
    </security:authentication-manager>	
	
    <bean class="org.springframework.security.ldap.DefaultSpringSecurityContextSource" id="contextSource">
        <constructor-arg value="ldap://localhost:389/dc=wavemaker,dc=vmware,dc=com"/>
    </bean>
    <bean class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider" id="ldapAuthProvider">
        <constructor-arg>
            <bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <constructor-arg ref="contextSource"/>
                <property name="userSearch">
                    <bean class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch" id="userSearch">
                        <constructor-arg index="0" value=""/>
                        <constructor-arg index="1" value="(cn={0})"/>
                        <constructor-arg index="2" ref="contextSource"/>
                    </bean>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.wavemaker.runtime.security.LdapAuthoritiesPopulator" id="LdapAuthoritiesPopulator">
                <constructor-arg>
                    <ref local="contextSource"/>
                </constructor-arg>
                <constructor-arg>
                    <value>ou=Groups</value>
                </constructor-arg>
                <property name="groupSearchDisabled">
                    <value>false</value>
                </property>
                <property name="groupRoleAttribute">
                    <value>cn</value>
                </property>
                <property name="groupSearchFilter">
                    <value>(uniqueMember={0})</value>
                </property>
                <property name="defaultRole">
                    <value>ROLE_DEFAULT_NO_ROLES</value>
                </property>
                <property name="rolePrefix">
                    <value>ROLE_</value>
                </property>
                <property name="convertToUpperCase">
                    <value>false</value>
                </property>
            </bean>
        </constructor-arg>
    </bean>
	<bean class="com.wavemaker.runtime.security.WMSecurityConfigStore" id="WMSecurityConfigStore">
	    <property name="enforceSecurity">
            <value>false</value>
        </property>
        <property name="enforceIndexHtml">
            <value>true</value>
        </property>
	</bean>    
</beans> 
